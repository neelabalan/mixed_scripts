{"amplifyuibuilder": {"class_name": "AmplifyUIBuilder", "documentation": "The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources. You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>. The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.", "methods": [{"method_name": "create_component", "method_documentation": "Creates a new component for an Amplify app.", "method_request_schema": {"appId": {"description": "The unique ID of the Amplify app to associate with the component.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "clientToken": {"description": "The unique client token.", "type": "string"}, "componentToCreate": {"name": {"description": "The name of the component", "type": "string"}, "sourceId": {"description": "The unique ID of the component in its original source system, such as Figma.", "type": "string"}, "componentType": {"description": "The component type. This can be an Amplify custom UI component or another custom component.", "type": "string"}, "properties": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "children": {"description": "A list of child components that are instances of the main component.", "type": "list"}, "variants": {"description": "A list of the unique variants of this component.", "type": "list"}, "overrides": {"description": "Describes the component properties that can be overriden to customize an instance of the component.", "type": "map"}, "bindingProperties": {"type": {"description": "The property type.", "type": "string"}, "bindingProperties": {"model": {"description": "An Amplify DataStore model.", "type": "string"}, "field": {"description": "The field to bind the data to.", "type": "string"}, "predicates": {"description": "A list of predicates for binding a component's properties to data.", "type": "list"}, "userAttribute": {"description": "An authenticated user attribute.", "type": "string"}, "bucket": {"description": "An Amazon S3 bucket.", "type": "string"}, "key": {"description": "The storage key for an Amazon S3 bucket.", "type": "string"}, "defaultValue": {"description": "The default value to assign to the property.", "type": "string"}, "slotName": {"description": "The name of a component slot.", "type": "string"}}, "defaultValue": {"description": "The default value of the property.", "type": "string"}}, "collectionProperties": {"model": {"description": "The name of the data model to use to bind data to a component.", "type": "string"}, "sort": {"description": "Describes how to sort the component's properties.", "type": "list"}, "predicate": {"or": {"description": "A list of predicates to combine logically.", "type": "list"}, "and": {"description": "A list of predicates to combine logically.", "type": "list"}, "field": {"description": "The field to query.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation.", "type": "string"}, "operand": {"description": "The value to use when performing the evaluation.", "type": "string"}, "operandType": {"description": "The type of value to use when performing the evaluation.", "type": "string"}}, "identifiers": {"description": "A list of IDs to use to bind data to a component. Use this property to bind specifically chosen data, rather than data retrieved from a query.", "type": "list"}}, "tags": {"description": "One or more key-value pairs to use when tagging the component data.", "type": "map"}, "events": {"action": {"description": "The action to perform when a specific event is raised.", "type": "string"}, "parameters": {"type": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "url": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "anchor": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "target": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "global": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "model": {"description": "The name of the data model. Use when the action performs an operation on an Amplify DataStore model.", "type": "string"}, "id": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "fields": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "state": {"componentName": {"description": "The name of the component that is being modified.", "type": "string"}, "property": {"description": "The name of the component property to apply the state configuration to.", "type": "string"}, "set": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}}}, "bindingEvent": {"description": "Binds an event to an action on a component. When you specify a <code>bindingEvent</code>, the event is called when the action is performed.", "type": "string"}}, "schemaVersion": {"description": "The schema version of the component when it was imported.", "type": "string"}}}, "method_response_schema": {"entity": {"appId": {"description": "The unique ID of the Amplify app associated with the component.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "sourceId": {"description": "The unique ID of the component in its original source system, such as Figma.", "type": "string"}, "id": {"description": "The unique ID of the component.", "type": "string"}, "name": {"description": "The name of the component.", "type": "string"}, "componentType": {"description": "The type of the component. This can be an Amplify custom UI component or another custom component.", "type": "string"}, "properties": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "children": {"description": "A list of the component's <code>ComponentChild</code> instances.", "type": "list"}, "variants": {"description": "A list of the component's variants. A variant is a unique style configuration of a main component.", "type": "list"}, "overrides": {"description": "Describes the component's properties that can be overriden in a customized instance of the component. You can't specify <code>tags</code> as a valid property for <code>overrides</code>.", "type": "map"}, "bindingProperties": {"type": {"description": "The property type.", "type": "string"}, "bindingProperties": {"model": {"description": "An Amplify DataStore model.", "type": "string"}, "field": {"description": "The field to bind the data to.", "type": "string"}, "predicates": {"description": "A list of predicates for binding a component's properties to data.", "type": "list"}, "userAttribute": {"description": "An authenticated user attribute.", "type": "string"}, "bucket": {"description": "An Amazon S3 bucket.", "type": "string"}, "key": {"description": "The storage key for an Amazon S3 bucket.", "type": "string"}, "defaultValue": {"description": "The default value to assign to the property.", "type": "string"}, "slotName": {"description": "The name of a component slot.", "type": "string"}}, "defaultValue": {"description": "The default value of the property.", "type": "string"}}, "collectionProperties": {"model": {"description": "The name of the data model to use to bind data to a component.", "type": "string"}, "sort": {"description": "Describes how to sort the component's properties.", "type": "list"}, "predicate": {"or": {"description": "A list of predicates to combine logically.", "type": "list"}, "and": {"description": "A list of predicates to combine logically.", "type": "list"}, "field": {"description": "The field to query.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation.", "type": "string"}, "operand": {"description": "The value to use when performing the evaluation.", "type": "string"}, "operandType": {"description": "The type of value to use when performing the evaluation.", "type": "string"}}, "identifiers": {"description": "A list of IDs to use to bind data to a component. Use this property to bind specifically chosen data, rather than data retrieved from a query.", "type": "list"}}, "createdAt": {"description": "The time that the component was created.", "type": "timestamp"}, "modifiedAt": {"description": "The time that the component was modified.", "type": "timestamp"}, "tags": {"description": "One or more key-value pairs to use when tagging the component.", "type": "map"}, "events": {"action": {"description": "The action to perform when a specific event is raised.", "type": "string"}, "parameters": {"type": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "url": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "anchor": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "target": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "global": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "model": {"description": "The name of the data model. Use when the action performs an operation on an Amplify DataStore model.", "type": "string"}, "id": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "fields": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "state": {"componentName": {"description": "The name of the component that is being modified.", "type": "string"}, "property": {"description": "The name of the component property to apply the state configuration to.", "type": "string"}, "set": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}}}, "bindingEvent": {"description": "Binds an event to an action on a component. When you specify a <code>bindingEvent</code>, the event is called when the action is performed.", "type": "string"}}, "schemaVersion": {"description": "The schema version of the component when it was imported.", "type": "string"}}}}, {"method_name": "create_form", "method_documentation": "Creates a new form for an Amplify app.", "method_request_schema": {"appId": {"description": "The unique ID of the Amplify app to associate with the form.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "clientToken": {"description": "The unique client token.", "type": "string"}, "formToCreate": {"name": {"description": "The name of the form.", "type": "string"}, "dataType": {"dataSourceType": {"description": "The data source type, either an Amplify DataStore model or a custom data type.", "type": "string", "enum": ["DataStore", "Custom"]}, "dataTypeName": {"description": "The unique name of the data type you are using as the data source for the form.", "type": "string"}}, "formActionType": {"description": "Specifies whether to perform a create or update action on the form.", "type": "string", "enum": ["create", "update"]}, "fields": {"label": {"description": "The label for the field.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}, "excluded": {"description": "Specifies whether to hide a field.", "type": "boolean"}, "inputType": {"type": {"description": "The input type for the field. ", "type": "string"}, "required": {"description": "Specifies a field that requires input.", "type": "boolean"}, "readOnly": {"description": "Specifies a read only field.", "type": "boolean"}, "placeholder": {"description": "The text to display as a placeholder for the field.", "type": "string"}, "defaultValue": {"description": "The default value for the field.", "type": "string"}, "descriptiveText": {"description": "The text to display to describe the field.", "type": "string"}, "defaultChecked": {"description": "Specifies whether a field has a default value.", "type": "boolean"}, "defaultCountryCode": {"description": "The default country code for a phone number.", "type": "string"}, "valueMappings": {"values": {"description": "The value and display value pairs.", "type": "list"}, "bindingProperties": {"type": {"description": "The property type.", "type": "string"}, "bindingProperties": {"model": {"description": "An Amplify DataStore model.", "type": "string"}}}}, "name": {"description": "The name of the field.", "type": "string"}, "minValue": {"description": "The minimum value to display for the field.", "type": "float"}, "maxValue": {"description": "The maximum value to display for the field.", "type": "float"}, "step": {"description": "The stepping increment for a numeric value in a field.", "type": "float"}, "value": {"description": "The value for the field.", "type": "string"}, "isArray": {"description": "Specifies whether to render the field as an array. This property is ignored if the <code>dataSourceType</code> for the form is a Data Store.", "type": "boolean"}, "fileUploaderConfig": {"accessLevel": {"description": "The access level to assign to the uploaded files in the Amazon S3 bucket where they are stored. The valid values for this property are <code>private</code>, <code>protected</code>, or <code>public</code>. For detailed information about the permissions associated with each access level, see <a href=\"https://docs.amplify.aws/lib/storage/configureaccess/q/platform/js/\">File access levels</a> in the <i>Amplify documentation</i>.", "type": "string", "enum": ["public", "protected", "private"]}, "acceptedFileTypes": {"description": "The file types that are allowed to be uploaded by the file uploader. Provide this information in an array of strings specifying the valid file extensions.", "type": "list"}, "showThumbnails": {"description": "Specifies whether to display or hide the image preview after selecting a file for upload. The default value is <code>true</code> to display the image preview.", "type": "boolean"}, "isResumable": {"description": "Allows the file upload operation to be paused and resumed. The default value is <code>false</code>. When <code>isResumable</code> is set to <code>true</code>, the file uploader uses a multipart upload to break the files into chunks before upload. The progress of the upload isn't continuous, because the file uploader uploads a chunk at a time.", "type": "boolean"}, "maxFileCount": {"description": "Specifies the maximum number of files that can be selected to upload. The default value is an unlimited number of files.", "type": "integer"}, "maxSize": {"description": "The maximum file size in bytes that the file uploader will accept. The default value is an unlimited file size.", "type": "integer"}}}, "validations": {"description": "The validations to perform on the value in the field.", "type": "list"}}, "style": {"horizontalGap": {"tokenReference": {"description": "A reference to a design token to use to bind the form's style properties to an existing theme.", "type": "string"}, "value": {"description": "The value of the style setting.", "type": "string"}}, "verticalGap": {"tokenReference": {"description": "A reference to a design token to use to bind the form's style properties to an existing theme.", "type": "string"}, "value": {"description": "The value of the style setting.", "type": "string"}}, "outerPadding": {"tokenReference": {"description": "A reference to a design token to use to bind the form's style properties to an existing theme.", "type": "string"}, "value": {"description": "The value of the style setting.", "type": "string"}}}, "sectionalElements": {"type": {"description": "The type of sectional element. Valid values are <code>Heading</code>, <code>Text</code>, and <code>Divider</code>.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}, "text": {"description": "The text for a <code>Text</code> sectional element.", "type": "string"}, "level": {"description": "Specifies the size of the font for a <code>Heading</code> sectional element. Valid values are <code>1 | 2 | 3 | 4 | 5 | 6</code>.", "type": "integer"}, "orientation": {"description": "Specifies the orientation for a <code>Divider</code> sectional element. Valid values are <code>horizontal</code> or <code>vertical</code>.", "type": "string"}, "excluded": {"description": "Excludes a sectional element that was generated by default for a specified data model.", "type": "boolean"}}, "schemaVersion": {"description": "The schema version of the form.", "type": "string"}, "cta": {"position": {"description": "The position of the button.", "type": "string", "enum": ["top", "bottom", "top_and_bottom"]}, "clear": {"excluded": {"description": "Specifies whether the button is visible on the form.", "type": "boolean"}, "children": {"description": "Describes the button's properties.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}}, "cancel": {"excluded": {"description": "Specifies whether the button is visible on the form.", "type": "boolean"}, "children": {"description": "Describes the button's properties.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}}, "submit": {"excluded": {"description": "Specifies whether the button is visible on the form.", "type": "boolean"}, "children": {"description": "Describes the button's properties.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}}}, "tags": {"description": "One or more key-value pairs to use when tagging the form data.", "type": "map"}, "labelDecorator": {"description": "Specifies an icon or decoration to display on the form.", "type": "string", "enum": ["required", "optional", "none"]}}}, "method_response_schema": {"entity": {"appId": {"description": "The unique ID of the Amplify app associated with the form.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "id": {"description": "The unique ID of the form.", "type": "string"}, "name": {"description": "The name of the form.", "type": "string"}, "formActionType": {"description": "The operation to perform on the specified form.", "type": "string", "enum": ["create", "update"]}, "style": {"horizontalGap": {"tokenReference": {"description": "A reference to a design token to use to bind the form's style properties to an existing theme.", "type": "string"}, "value": {"description": "The value of the style setting.", "type": "string"}}, "verticalGap": {"tokenReference": {"description": "A reference to a design token to use to bind the form's style properties to an existing theme.", "type": "string"}, "value": {"description": "The value of the style setting.", "type": "string"}}, "outerPadding": {"tokenReference": {"description": "A reference to a design token to use to bind the form's style properties to an existing theme.", "type": "string"}, "value": {"description": "The value of the style setting.", "type": "string"}}}, "dataType": {"dataSourceType": {"description": "The data source type, either an Amplify DataStore model or a custom data type.", "type": "string", "enum": ["DataStore", "Custom"]}, "dataTypeName": {"description": "The unique name of the data type you are using as the data source for the form.", "type": "string"}}, "fields": {"label": {"description": "The label for the field.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}, "excluded": {"description": "Specifies whether to hide a field.", "type": "boolean"}, "inputType": {"type": {"description": "The input type for the field. ", "type": "string"}, "required": {"description": "Specifies a field that requires input.", "type": "boolean"}, "readOnly": {"description": "Specifies a read only field.", "type": "boolean"}, "placeholder": {"description": "The text to display as a placeholder for the field.", "type": "string"}, "defaultValue": {"description": "The default value for the field.", "type": "string"}, "descriptiveText": {"description": "The text to display to describe the field.", "type": "string"}, "defaultChecked": {"description": "Specifies whether a field has a default value.", "type": "boolean"}, "defaultCountryCode": {"description": "The default country code for a phone number.", "type": "string"}, "valueMappings": {"values": {"description": "The value and display value pairs.", "type": "list"}, "bindingProperties": {"type": {"description": "The property type.", "type": "string"}, "bindingProperties": {"model": {"description": "An Amplify DataStore model.", "type": "string"}}}}, "name": {"description": "The name of the field.", "type": "string"}, "minValue": {"description": "The minimum value to display for the field.", "type": "float"}, "maxValue": {"description": "The maximum value to display for the field.", "type": "float"}, "step": {"description": "The stepping increment for a numeric value in a field.", "type": "float"}, "value": {"description": "The value for the field.", "type": "string"}, "isArray": {"description": "Specifies whether to render the field as an array. This property is ignored if the <code>dataSourceType</code> for the form is a Data Store.", "type": "boolean"}, "fileUploaderConfig": {"accessLevel": {"description": "The access level to assign to the uploaded files in the Amazon S3 bucket where they are stored. The valid values for this property are <code>private</code>, <code>protected</code>, or <code>public</code>. For detailed information about the permissions associated with each access level, see <a href=\"https://docs.amplify.aws/lib/storage/configureaccess/q/platform/js/\">File access levels</a> in the <i>Amplify documentation</i>.", "type": "string", "enum": ["public", "protected", "private"]}, "acceptedFileTypes": {"description": "The file types that are allowed to be uploaded by the file uploader. Provide this information in an array of strings specifying the valid file extensions.", "type": "list"}, "showThumbnails": {"description": "Specifies whether to display or hide the image preview after selecting a file for upload. The default value is <code>true</code> to display the image preview.", "type": "boolean"}, "isResumable": {"description": "Allows the file upload operation to be paused and resumed. The default value is <code>false</code>. When <code>isResumable</code> is set to <code>true</code>, the file uploader uses a multipart upload to break the files into chunks before upload. The progress of the upload isn't continuous, because the file uploader uploads a chunk at a time.", "type": "boolean"}, "maxFileCount": {"description": "Specifies the maximum number of files that can be selected to upload. The default value is an unlimited number of files.", "type": "integer"}, "maxSize": {"description": "The maximum file size in bytes that the file uploader will accept. The default value is an unlimited file size.", "type": "integer"}}}, "validations": {"description": "The validations to perform on the value in the field.", "type": "list"}}, "sectionalElements": {"type": {"description": "The type of sectional element. Valid values are <code>Heading</code>, <code>Text</code>, and <code>Divider</code>.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}, "text": {"description": "The text for a <code>Text</code> sectional element.", "type": "string"}, "level": {"description": "Specifies the size of the font for a <code>Heading</code> sectional element. Valid values are <code>1 | 2 | 3 | 4 | 5 | 6</code>.", "type": "integer"}, "orientation": {"description": "Specifies the orientation for a <code>Divider</code> sectional element. Valid values are <code>horizontal</code> or <code>vertical</code>.", "type": "string"}, "excluded": {"description": "Excludes a sectional element that was generated by default for a specified data model.", "type": "boolean"}}, "schemaVersion": {"description": "The schema version of the form when it was imported.", "type": "string"}, "tags": {"description": "One or more key-value pairs to use when tagging the form.", "type": "map"}, "cta": {"position": {"description": "The position of the button.", "type": "string", "enum": ["top", "bottom", "top_and_bottom"]}, "clear": {"excluded": {"description": "Specifies whether the button is visible on the form.", "type": "boolean"}, "children": {"description": "Describes the button's properties.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}}, "cancel": {"excluded": {"description": "Specifies whether the button is visible on the form.", "type": "boolean"}, "children": {"description": "Describes the button's properties.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}}, "submit": {"excluded": {"description": "Specifies whether the button is visible on the form.", "type": "boolean"}, "children": {"description": "Describes the button's properties.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}}}, "labelDecorator": {"description": "Specifies an icon or decoration to display on the form.", "type": "string", "enum": ["required", "optional", "none"]}}}}, {"method_name": "create_theme", "method_documentation": "Creates a theme to apply to the components in an Amplify app.", "method_request_schema": {"appId": {"description": "The unique ID of the Amplify app associated with the theme.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "clientToken": {"description": "The unique client token.", "type": "string"}, "themeToCreate": {"name": {"description": "The name of the theme.", "type": "string"}, "values": {"description": "A list of key-value pairs that de\ufb01nes the properties of the theme.", "type": "list"}, "overrides": {"description": "Describes the properties that can be overriden to customize an instance of the theme.", "type": "list"}, "tags": {"description": "One or more key-value pairs to use when tagging the theme data.", "type": "map"}}}, "method_response_schema": {"entity": {"appId": {"description": "The unique ID for the Amplify app associated with the theme.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "id": {"description": "The ID for the theme.", "type": "string"}, "name": {"description": "The name of the theme.", "type": "string"}, "createdAt": {"description": "The time that the theme was created.", "type": "timestamp"}, "modifiedAt": {"description": "The time that the theme was modified.", "type": "timestamp"}, "values": {"description": "A list of key-value pairs that defines the properties of the theme.", "type": "list"}, "overrides": {"description": "Describes the properties that can be overriden to customize a theme.", "type": "list"}, "tags": {"description": "One or more key-value pairs to use when tagging the theme.", "type": "map"}}}}, {"method_name": "delete_component", "method_documentation": "Deletes a component from an Amplify app.", "method_request_schema": {"appId": {"description": "The unique ID of the Amplify app associated with the component to delete.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "id": {"description": "The unique ID of the component to delete.", "type": "string"}}}, {"method_name": "delete_form", "method_documentation": "Deletes a form from an Amplify app.", "method_request_schema": {"appId": {"description": "The unique ID of the Amplify app associated with the form to delete.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "id": {"description": "The unique ID of the form to delete.", "type": "string"}}}, {"method_name": "delete_theme", "method_documentation": "Deletes a theme from an Amplify app.", "method_request_schema": {"appId": {"description": "The unique ID of the Amplify app associated with the theme to delete.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "id": {"description": "The unique ID of the theme to delete.", "type": "string"}}}, {"method_name": "exchange_code_for_token", "method_documentation": "<note> This is for internal use. </note> Amplify uses this action to exchange an access code for a token.", "method_request_schema": {"provider": {"description": "The third-party provider for the token. The only valid value is <code>figma</code>.", "type": "string", "enum": ["figma"]}, "request": {"code": {"description": "The access code to send in the request.", "type": "string"}, "redirectUri": {"description": "The location of the application that will receive the access code.", "type": "string"}, "clientId": {"description": "The ID of the client to request the token from.", "type": "string"}}}, "method_response_schema": {"accessToken": {"description": "The access token.", "type": "string"}, "expiresIn": {"description": "The date and time when the new access token expires.", "type": "integer"}, "refreshToken": {"description": "The token to use to refresh a previously issued access token that might have expired.", "type": "string"}}}, {"method_name": "export_components", "method_documentation": "Exports component configurations to code that is ready to integrate into an Amplify app.", "method_request_schema": {"appId": {"description": "The unique ID of the Amplify app to export components to.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "nextToken": {"description": "The token to request the next page of results.", "type": "string"}}, "method_response_schema": {"entities": {"description": "Represents the configuration of the exported components.", "type": "list"}, "nextToken": {"description": "The pagination token that's included if more results are available.", "type": "string"}}}, {"method_name": "export_forms", "method_documentation": "Exports form configurations to code that is ready to integrate into an Amplify app.", "method_request_schema": {"appId": {"description": "The unique ID of the Amplify app to export forms to.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "nextToken": {"description": "The token to request the next page of results.", "type": "string"}}, "method_response_schema": {"entities": {"description": "Represents the configuration of the exported forms.", "type": "list"}, "nextToken": {"description": "The pagination token that's included if more results are available.", "type": "string"}}}, {"method_name": "export_themes", "method_documentation": "Exports theme configurations to code that is ready to integrate into an Amplify app.", "method_request_schema": {"appId": {"description": "The unique ID of the Amplify app to export the themes to.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is part of the Amplify app.", "type": "string"}, "nextToken": {"description": "The token to request the next page of results.", "type": "string"}}, "method_response_schema": {"entities": {"description": "Represents the configuration of the exported themes.", "type": "list"}, "nextToken": {"description": "The pagination token that's included if more results are available.", "type": "string"}}}, {"method_name": "get_codegen_job", "method_documentation": "Returns an existing code generation job.", "method_request_schema": {"appId": {"description": "The unique ID of the Amplify app associated with the code generation job.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app associated with the code generation job.", "type": "string"}, "id": {"description": "The unique ID of the code generation job.", "type": "string"}}, "method_response_schema": {"job": {"id": {"description": "The unique ID for the code generation job.", "type": "string"}, "appId": {"description": "The ID of the Amplify app associated with the code generation job.", "type": "string"}, "environmentName": {"description": "The name of the backend environment associated with the code generation job.", "type": "string"}, "renderConfig": {"react": {"module": {"description": "The JavaScript module type.", "type": "string", "enum": ["es2020", "esnext"]}, "target": {"description": "The ECMAScript specification to use.", "type": "string", "enum": ["es2015", "es2020"]}, "script": {"description": "The file type to use for a JavaScript project.", "type": "string", "enum": ["jsx", "tsx", "js"]}, "renderTypeDeclarations": {"description": "Specifies whether the code generation job should render type declaration files.", "type": "boolean"}, "inlineSourceMap": {"description": "Specifies whether the code generation job should render inline source maps.", "type": "boolean"}, "apiConfiguration": {"graphQLConfig": {"typesFilePath": {"description": "The path to the GraphQL types file, relative to the component output directory.", "type": "string"}, "queriesFilePath": {"description": "The path to the GraphQL queries file, relative to the component output directory.", "type": "string"}, "mutationsFilePath": {"description": "The path to the GraphQL mutations file, relative to the component output directory.", "type": "string"}, "subscriptionsFilePath": {"description": "The path to the GraphQL subscriptions file, relative to the component output directory.", "type": "string"}, "fragmentsFilePath": {"description": "The path to the GraphQL fragments file, relative to the component output directory.", "type": "string"}}, "dataStoreConfig": {}, "noApiConfig": {}}, "dependencies": {"description": "Lists the dependency packages that may be required for the project code to run.", "type": "map"}}}, "genericDataSchema": {"dataSourceType": {"description": "The type of the data source for the schema. Currently, the only valid value is an Amplify <code>DataStore</code>.", "type": "string", "enum": ["DataStore"]}, "models": {"fields": {"dataType": {"description": "The data type for the generic data field.", "type": "string", "enum": ["ID", "String", "Int", "Float", "AWSDate", "AWSTime", "AWSDateTime", "AWSTimestamp", "AWSEmail", "AWSURL", "AWSIPAddress", "Boolean", "AWSJSON", "AWSPhone", "Enum", "Model", "NonModel"]}, "dataTypeValue": {"description": "The value of the data type for the generic data field.", "type": "string"}, "required": {"description": "Specifies whether the generic data field is required.", "type": "boolean"}, "readOnly": {"description": "Specifies whether the generic data field is read-only.", "type": "boolean"}, "isArray": {"description": "Specifies whether the generic data field is an array.", "type": "boolean"}, "relationship": {"type": {"description": "The data relationship type.", "type": "string", "enum": ["HAS_MANY", "HAS_ONE", "BELONGS_TO"]}, "relatedModelName": {"description": "The name of the related model in the data relationship.", "type": "string"}, "relatedModelFields": {"description": "The related model fields in the data relationship.", "type": "list"}, "canUnlinkAssociatedModel": {"description": "Specifies whether the relationship can unlink the associated model.", "type": "boolean"}, "relatedJoinFieldName": {"description": "The name of the related join field in the data relationship.", "type": "string"}, "relatedJoinTableName": {"description": "The name of the related join table in the data relationship.", "type": "string"}, "belongsToFieldOnRelatedModel": {"description": "The value of the <code>belongsTo</code> field on the related data model. ", "type": "string"}, "associatedFields": {"description": "The associated fields of the data relationship.", "type": "list"}, "isHasManyIndex": {"description": "Specifies whether the <code>@index</code> directive is supported for a <code>hasMany</code> data relationship.", "type": "boolean"}}}, "isJoinTable": {"description": "Specifies whether the generic data model is a join table.", "type": "boolean"}, "primaryKeys": {"description": "The primary keys of the generic data model.", "type": "list"}}, "enums": {"values": {"description": "The list of enum values in the generic data schema.", "type": "list"}}, "nonModels": {"fields": {"dataType": {"description": "The data type for the generic data field.", "type": "string", "enum": ["ID", "String", "Int", "Float", "AWSDate", "AWSTime", "AWSDateTime", "AWSTimestamp", "AWSEmail", "AWSURL", "AWSIPAddress", "Boolean", "AWSJSON", "AWSPhone", "Enum", "Model", "NonModel"]}, "dataTypeValue": {"description": "The value of the data type for the generic data field.", "type": "string"}, "required": {"description": "Specifies whether the generic data field is required.", "type": "boolean"}, "readOnly": {"description": "Specifies whether the generic data field is read-only.", "type": "boolean"}, "isArray": {"description": "Specifies whether the generic data field is an array.", "type": "boolean"}, "relationship": {"type": {"description": "The data relationship type.", "type": "string", "enum": ["HAS_MANY", "HAS_ONE", "BELONGS_TO"]}, "relatedModelName": {"description": "The name of the related model in the data relationship.", "type": "string"}, "relatedModelFields": {"description": "The related model fields in the data relationship.", "type": "list"}, "canUnlinkAssociatedModel": {"description": "Specifies whether the relationship can unlink the associated model.", "type": "boolean"}, "relatedJoinFieldName": {"description": "The name of the related join field in the data relationship.", "type": "string"}, "relatedJoinTableName": {"description": "The name of the related join table in the data relationship.", "type": "string"}, "belongsToFieldOnRelatedModel": {"description": "The value of the <code>belongsTo</code> field on the related data model. ", "type": "string"}, "associatedFields": {"description": "The associated fields of the data relationship.", "type": "list"}, "isHasManyIndex": {"description": "Specifies whether the <code>@index</code> directive is supported for a <code>hasMany</code> data relationship.", "type": "boolean"}}}}}, "autoGenerateForms": {"description": "Specifies whether to autogenerate forms in the code generation job.", "type": "boolean"}, "features": {"isRelationshipSupported": {"description": "Specifes whether a code generation job supports data relationships.", "type": "boolean"}, "isNonModelSupported": {"description": "Specifies whether a code generation job supports non models.", "type": "boolean"}}, "status": {"description": "The status of the code generation job.", "type": "string", "enum": ["in_progress", "failed", "succeeded"]}, "statusMessage": {"description": "The customized status message for the code generation job.", "type": "string"}, "asset": {"downloadUrl": {"description": "The URL to use to access the asset.", "type": "string"}}, "tags": {"description": "One or more key-value pairs to use when tagging the code generation job.", "type": "map"}, "createdAt": {"description": "The time that the code generation job was created.", "type": "timestamp"}, "modifiedAt": {"description": "The time that the code generation job was modified.", "type": "timestamp"}, "dependencies": {"description": "Lists the dependency packages that may be required for the project code to run.", "type": "list"}}}}, {"method_name": "get_component", "method_documentation": "Returns an existing component for an Amplify app.", "method_request_schema": {"appId": {"description": "The unique ID of the Amplify app.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is part of the Amplify app.", "type": "string"}, "id": {"description": "The unique ID of the component.", "type": "string"}}, "method_response_schema": {"component": {"appId": {"description": "The unique ID of the Amplify app associated with the component.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "sourceId": {"description": "The unique ID of the component in its original source system, such as Figma.", "type": "string"}, "id": {"description": "The unique ID of the component.", "type": "string"}, "name": {"description": "The name of the component.", "type": "string"}, "componentType": {"description": "The type of the component. This can be an Amplify custom UI component or another custom component.", "type": "string"}, "properties": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "children": {"description": "A list of the component's <code>ComponentChild</code> instances.", "type": "list"}, "variants": {"description": "A list of the component's variants. A variant is a unique style configuration of a main component.", "type": "list"}, "overrides": {"description": "Describes the component's properties that can be overriden in a customized instance of the component. You can't specify <code>tags</code> as a valid property for <code>overrides</code>.", "type": "map"}, "bindingProperties": {"type": {"description": "The property type.", "type": "string"}, "bindingProperties": {"model": {"description": "An Amplify DataStore model.", "type": "string"}, "field": {"description": "The field to bind the data to.", "type": "string"}, "predicates": {"description": "A list of predicates for binding a component's properties to data.", "type": "list"}, "userAttribute": {"description": "An authenticated user attribute.", "type": "string"}, "bucket": {"description": "An Amazon S3 bucket.", "type": "string"}, "key": {"description": "The storage key for an Amazon S3 bucket.", "type": "string"}, "defaultValue": {"description": "The default value to assign to the property.", "type": "string"}, "slotName": {"description": "The name of a component slot.", "type": "string"}}, "defaultValue": {"description": "The default value of the property.", "type": "string"}}, "collectionProperties": {"model": {"description": "The name of the data model to use to bind data to a component.", "type": "string"}, "sort": {"description": "Describes how to sort the component's properties.", "type": "list"}, "predicate": {"or": {"description": "A list of predicates to combine logically.", "type": "list"}, "and": {"description": "A list of predicates to combine logically.", "type": "list"}, "field": {"description": "The field to query.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation.", "type": "string"}, "operand": {"description": "The value to use when performing the evaluation.", "type": "string"}, "operandType": {"description": "The type of value to use when performing the evaluation.", "type": "string"}}, "identifiers": {"description": "A list of IDs to use to bind data to a component. Use this property to bind specifically chosen data, rather than data retrieved from a query.", "type": "list"}}, "createdAt": {"description": "The time that the component was created.", "type": "timestamp"}, "modifiedAt": {"description": "The time that the component was modified.", "type": "timestamp"}, "tags": {"description": "One or more key-value pairs to use when tagging the component.", "type": "map"}, "events": {"action": {"description": "The action to perform when a specific event is raised.", "type": "string"}, "parameters": {"type": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "url": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "anchor": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "target": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "global": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "model": {"description": "The name of the data model. Use when the action performs an operation on an Amplify DataStore model.", "type": "string"}, "id": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "fields": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "state": {"componentName": {"description": "The name of the component that is being modified.", "type": "string"}, "property": {"description": "The name of the component property to apply the state configuration to.", "type": "string"}, "set": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}}}, "bindingEvent": {"description": "Binds an event to an action on a component. When you specify a <code>bindingEvent</code>, the event is called when the action is performed.", "type": "string"}}, "schemaVersion": {"description": "The schema version of the component when it was imported.", "type": "string"}}}}, {"method_name": "get_form", "method_documentation": "Returns an existing form for an Amplify app.", "method_request_schema": {"appId": {"description": "The unique ID of the Amplify app.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is part of the Amplify app.", "type": "string"}, "id": {"description": "The unique ID of the form.", "type": "string"}}, "method_response_schema": {"form": {"appId": {"description": "The unique ID of the Amplify app associated with the form.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "id": {"description": "The unique ID of the form.", "type": "string"}, "name": {"description": "The name of the form.", "type": "string"}, "formActionType": {"description": "The operation to perform on the specified form.", "type": "string", "enum": ["create", "update"]}, "style": {"horizontalGap": {"tokenReference": {"description": "A reference to a design token to use to bind the form's style properties to an existing theme.", "type": "string"}, "value": {"description": "The value of the style setting.", "type": "string"}}, "verticalGap": {"tokenReference": {"description": "A reference to a design token to use to bind the form's style properties to an existing theme.", "type": "string"}, "value": {"description": "The value of the style setting.", "type": "string"}}, "outerPadding": {"tokenReference": {"description": "A reference to a design token to use to bind the form's style properties to an existing theme.", "type": "string"}, "value": {"description": "The value of the style setting.", "type": "string"}}}, "dataType": {"dataSourceType": {"description": "The data source type, either an Amplify DataStore model or a custom data type.", "type": "string", "enum": ["DataStore", "Custom"]}, "dataTypeName": {"description": "The unique name of the data type you are using as the data source for the form.", "type": "string"}}, "fields": {"label": {"description": "The label for the field.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}, "excluded": {"description": "Specifies whether to hide a field.", "type": "boolean"}, "inputType": {"type": {"description": "The input type for the field. ", "type": "string"}, "required": {"description": "Specifies a field that requires input.", "type": "boolean"}, "readOnly": {"description": "Specifies a read only field.", "type": "boolean"}, "placeholder": {"description": "The text to display as a placeholder for the field.", "type": "string"}, "defaultValue": {"description": "The default value for the field.", "type": "string"}, "descriptiveText": {"description": "The text to display to describe the field.", "type": "string"}, "defaultChecked": {"description": "Specifies whether a field has a default value.", "type": "boolean"}, "defaultCountryCode": {"description": "The default country code for a phone number.", "type": "string"}, "valueMappings": {"values": {"description": "The value and display value pairs.", "type": "list"}, "bindingProperties": {"type": {"description": "The property type.", "type": "string"}, "bindingProperties": {"model": {"description": "An Amplify DataStore model.", "type": "string"}}}}, "name": {"description": "The name of the field.", "type": "string"}, "minValue": {"description": "The minimum value to display for the field.", "type": "float"}, "maxValue": {"description": "The maximum value to display for the field.", "type": "float"}, "step": {"description": "The stepping increment for a numeric value in a field.", "type": "float"}, "value": {"description": "The value for the field.", "type": "string"}, "isArray": {"description": "Specifies whether to render the field as an array. This property is ignored if the <code>dataSourceType</code> for the form is a Data Store.", "type": "boolean"}, "fileUploaderConfig": {"accessLevel": {"description": "The access level to assign to the uploaded files in the Amazon S3 bucket where they are stored. The valid values for this property are <code>private</code>, <code>protected</code>, or <code>public</code>. For detailed information about the permissions associated with each access level, see <a href=\"https://docs.amplify.aws/lib/storage/configureaccess/q/platform/js/\">File access levels</a> in the <i>Amplify documentation</i>.", "type": "string", "enum": ["public", "protected", "private"]}, "acceptedFileTypes": {"description": "The file types that are allowed to be uploaded by the file uploader. Provide this information in an array of strings specifying the valid file extensions.", "type": "list"}, "showThumbnails": {"description": "Specifies whether to display or hide the image preview after selecting a file for upload. The default value is <code>true</code> to display the image preview.", "type": "boolean"}, "isResumable": {"description": "Allows the file upload operation to be paused and resumed. The default value is <code>false</code>. When <code>isResumable</code> is set to <code>true</code>, the file uploader uses a multipart upload to break the files into chunks before upload. The progress of the upload isn't continuous, because the file uploader uploads a chunk at a time.", "type": "boolean"}, "maxFileCount": {"description": "Specifies the maximum number of files that can be selected to upload. The default value is an unlimited number of files.", "type": "integer"}, "maxSize": {"description": "The maximum file size in bytes that the file uploader will accept. The default value is an unlimited file size.", "type": "integer"}}}, "validations": {"description": "The validations to perform on the value in the field.", "type": "list"}}, "sectionalElements": {"type": {"description": "The type of sectional element. Valid values are <code>Heading</code>, <code>Text</code>, and <code>Divider</code>.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}, "text": {"description": "The text for a <code>Text</code> sectional element.", "type": "string"}, "level": {"description": "Specifies the size of the font for a <code>Heading</code> sectional element. Valid values are <code>1 | 2 | 3 | 4 | 5 | 6</code>.", "type": "integer"}, "orientation": {"description": "Specifies the orientation for a <code>Divider</code> sectional element. Valid values are <code>horizontal</code> or <code>vertical</code>.", "type": "string"}, "excluded": {"description": "Excludes a sectional element that was generated by default for a specified data model.", "type": "boolean"}}, "schemaVersion": {"description": "The schema version of the form when it was imported.", "type": "string"}, "tags": {"description": "One or more key-value pairs to use when tagging the form.", "type": "map"}, "cta": {"position": {"description": "The position of the button.", "type": "string", "enum": ["top", "bottom", "top_and_bottom"]}, "clear": {"excluded": {"description": "Specifies whether the button is visible on the form.", "type": "boolean"}, "children": {"description": "Describes the button's properties.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}}, "cancel": {"excluded": {"description": "Specifies whether the button is visible on the form.", "type": "boolean"}, "children": {"description": "Describes the button's properties.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}}, "submit": {"excluded": {"description": "Specifies whether the button is visible on the form.", "type": "boolean"}, "children": {"description": "Describes the button's properties.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}}}, "labelDecorator": {"description": "Specifies an icon or decoration to display on the form.", "type": "string", "enum": ["required", "optional", "none"]}}}}, {"method_name": "get_metadata", "method_documentation": "Returns existing metadata for an Amplify app.", "method_request_schema": {"appId": {"description": "The unique ID of the Amplify app.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is part of the Amplify app.", "type": "string"}}, "method_response_schema": {"features": {"description": "Represents the configuration settings for the features metadata.", "type": "map"}}}, {"method_name": "get_theme", "method_documentation": "Returns an existing theme for an Amplify app.", "method_request_schema": {"appId": {"description": "The unique ID of the Amplify app.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is part of the Amplify app.", "type": "string"}, "id": {"description": "The unique ID for the theme.", "type": "string"}}, "method_response_schema": {"theme": {"appId": {"description": "The unique ID for the Amplify app associated with the theme.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "id": {"description": "The ID for the theme.", "type": "string"}, "name": {"description": "The name of the theme.", "type": "string"}, "createdAt": {"description": "The time that the theme was created.", "type": "timestamp"}, "modifiedAt": {"description": "The time that the theme was modified.", "type": "timestamp"}, "values": {"description": "A list of key-value pairs that defines the properties of the theme.", "type": "list"}, "overrides": {"description": "Describes the properties that can be overriden to customize a theme.", "type": "list"}, "tags": {"description": "One or more key-value pairs to use when tagging the theme.", "type": "map"}}}}, {"method_name": "list_codegen_jobs", "method_documentation": "Retrieves a list of code generation jobs for a specified Amplify app and backend environment.", "method_request_schema": {"appId": {"description": "The unique ID for the Amplify app.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "nextToken": {"description": "The token to request the next page of results.", "type": "string"}, "maxResults": {"description": "The maximum number of jobs to retrieve.", "type": "integer"}}, "method_response_schema": {"entities": {"description": "The list of code generation jobs for the Amplify app.", "type": "list"}, "nextToken": {"description": "The pagination token that's included if more results are available.", "type": "string"}}}, {"method_name": "list_components", "method_documentation": "Retrieves a list of components for a specified Amplify app and backend environment.", "method_request_schema": {"appId": {"description": "The unique ID for the Amplify app.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "nextToken": {"description": "The token to request the next page of results.", "type": "string"}, "maxResults": {"description": "The maximum number of components to retrieve.", "type": "integer"}}, "method_response_schema": {"entities": {"description": "The list of components for the Amplify app.", "type": "list"}, "nextToken": {"description": "The pagination token that's included if more results are available.", "type": "string"}}}, {"method_name": "list_forms", "method_documentation": "Retrieves a list of forms for a specified Amplify app and backend environment.", "method_request_schema": {"appId": {"description": "The unique ID for the Amplify app.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "nextToken": {"description": "The token to request the next page of results.", "type": "string"}, "maxResults": {"description": "The maximum number of forms to retrieve.", "type": "integer"}}, "method_response_schema": {"entities": {"description": "The list of forms for the Amplify app.", "type": "list"}, "nextToken": {"description": "The pagination token that's included if more results are available.", "type": "string"}}}, {"method_name": "list_themes", "method_documentation": "Retrieves a list of themes for a specified Amplify app and backend environment.", "method_request_schema": {"appId": {"description": "The unique ID for the Amplify app.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "nextToken": {"description": "The token to request the next page of results.", "type": "string"}, "maxResults": {"description": "The maximum number of theme results to return in the response.", "type": "integer"}}, "method_response_schema": {"entities": {"description": "The list of themes for the Amplify app.", "type": "list"}, "nextToken": {"description": "The pagination token that's returned if more results are available.", "type": "string"}}}, {"method_name": "put_metadata_flag", "method_documentation": "Stores the metadata information about a feature on a form.", "method_request_schema": {"appId": {"description": "The unique ID for the Amplify app.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is part of the Amplify app.", "type": "string"}, "featureName": {"description": "The name of the feature associated with the metadata.", "type": "string"}, "body": {"newValue": {"description": "The new information to store.", "type": "string"}}}}, {"method_name": "refresh_token", "method_documentation": "<note> This is for internal use. </note> Amplify uses this action to refresh a previously issued access token that might have expired.", "method_request_schema": {"provider": {"description": "The third-party provider for the token. The only valid value is <code>figma</code>.", "type": "string", "enum": ["figma"]}, "refreshTokenBody": {"token": {"description": "The token to use to refresh a previously issued access token that might have expired.", "type": "string"}, "clientId": {"description": "The ID of the client to request the token from.", "type": "string"}}}, "method_response_schema": {"accessToken": {"description": "The access token.", "type": "string"}, "expiresIn": {"description": "The date and time when the new access token expires.", "type": "integer"}}}, {"method_name": "start_codegen_job", "method_documentation": "Starts a code generation job for a specified Amplify app and backend environment.", "method_request_schema": {"appId": {"description": "The unique ID for the Amplify app.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "clientToken": {"description": "The idempotency token used to ensure that the code generation job request completes only once.", "type": "string"}, "codegenJobToCreate": {"renderConfig": {"react": {"module": {"description": "The JavaScript module type.", "type": "string", "enum": ["es2020", "esnext"]}, "target": {"description": "The ECMAScript specification to use.", "type": "string", "enum": ["es2015", "es2020"]}, "script": {"description": "The file type to use for a JavaScript project.", "type": "string", "enum": ["jsx", "tsx", "js"]}, "renderTypeDeclarations": {"description": "Specifies whether the code generation job should render type declaration files.", "type": "boolean"}, "inlineSourceMap": {"description": "Specifies whether the code generation job should render inline source maps.", "type": "boolean"}, "apiConfiguration": {"graphQLConfig": {"typesFilePath": {"description": "The path to the GraphQL types file, relative to the component output directory.", "type": "string"}, "queriesFilePath": {"description": "The path to the GraphQL queries file, relative to the component output directory.", "type": "string"}, "mutationsFilePath": {"description": "The path to the GraphQL mutations file, relative to the component output directory.", "type": "string"}, "subscriptionsFilePath": {"description": "The path to the GraphQL subscriptions file, relative to the component output directory.", "type": "string"}, "fragmentsFilePath": {"description": "The path to the GraphQL fragments file, relative to the component output directory.", "type": "string"}}, "dataStoreConfig": {}, "noApiConfig": {}}, "dependencies": {"description": "Lists the dependency packages that may be required for the project code to run.", "type": "map"}}}, "genericDataSchema": {"dataSourceType": {"description": "The type of the data source for the schema. Currently, the only valid value is an Amplify <code>DataStore</code>.", "type": "string", "enum": ["DataStore"]}, "models": {"fields": {"dataType": {"description": "The data type for the generic data field.", "type": "string", "enum": ["ID", "String", "Int", "Float", "AWSDate", "AWSTime", "AWSDateTime", "AWSTimestamp", "AWSEmail", "AWSURL", "AWSIPAddress", "Boolean", "AWSJSON", "AWSPhone", "Enum", "Model", "NonModel"]}, "dataTypeValue": {"description": "The value of the data type for the generic data field.", "type": "string"}, "required": {"description": "Specifies whether the generic data field is required.", "type": "boolean"}, "readOnly": {"description": "Specifies whether the generic data field is read-only.", "type": "boolean"}, "isArray": {"description": "Specifies whether the generic data field is an array.", "type": "boolean"}, "relationship": {"type": {"description": "The data relationship type.", "type": "string", "enum": ["HAS_MANY", "HAS_ONE", "BELONGS_TO"]}, "relatedModelName": {"description": "The name of the related model in the data relationship.", "type": "string"}, "relatedModelFields": {"description": "The related model fields in the data relationship.", "type": "list"}, "canUnlinkAssociatedModel": {"description": "Specifies whether the relationship can unlink the associated model.", "type": "boolean"}, "relatedJoinFieldName": {"description": "The name of the related join field in the data relationship.", "type": "string"}, "relatedJoinTableName": {"description": "The name of the related join table in the data relationship.", "type": "string"}, "belongsToFieldOnRelatedModel": {"description": "The value of the <code>belongsTo</code> field on the related data model. ", "type": "string"}, "associatedFields": {"description": "The associated fields of the data relationship.", "type": "list"}, "isHasManyIndex": {"description": "Specifies whether the <code>@index</code> directive is supported for a <code>hasMany</code> data relationship.", "type": "boolean"}}}, "isJoinTable": {"description": "Specifies whether the generic data model is a join table.", "type": "boolean"}, "primaryKeys": {"description": "The primary keys of the generic data model.", "type": "list"}}, "enums": {"values": {"description": "The list of enum values in the generic data schema.", "type": "list"}}, "nonModels": {"fields": {"dataType": {"description": "The data type for the generic data field.", "type": "string", "enum": ["ID", "String", "Int", "Float", "AWSDate", "AWSTime", "AWSDateTime", "AWSTimestamp", "AWSEmail", "AWSURL", "AWSIPAddress", "Boolean", "AWSJSON", "AWSPhone", "Enum", "Model", "NonModel"]}, "dataTypeValue": {"description": "The value of the data type for the generic data field.", "type": "string"}, "required": {"description": "Specifies whether the generic data field is required.", "type": "boolean"}, "readOnly": {"description": "Specifies whether the generic data field is read-only.", "type": "boolean"}, "isArray": {"description": "Specifies whether the generic data field is an array.", "type": "boolean"}, "relationship": {"type": {"description": "The data relationship type.", "type": "string", "enum": ["HAS_MANY", "HAS_ONE", "BELONGS_TO"]}, "relatedModelName": {"description": "The name of the related model in the data relationship.", "type": "string"}, "relatedModelFields": {"description": "The related model fields in the data relationship.", "type": "list"}, "canUnlinkAssociatedModel": {"description": "Specifies whether the relationship can unlink the associated model.", "type": "boolean"}, "relatedJoinFieldName": {"description": "The name of the related join field in the data relationship.", "type": "string"}, "relatedJoinTableName": {"description": "The name of the related join table in the data relationship.", "type": "string"}, "belongsToFieldOnRelatedModel": {"description": "The value of the <code>belongsTo</code> field on the related data model. ", "type": "string"}, "associatedFields": {"description": "The associated fields of the data relationship.", "type": "list"}, "isHasManyIndex": {"description": "Specifies whether the <code>@index</code> directive is supported for a <code>hasMany</code> data relationship.", "type": "boolean"}}}}}, "autoGenerateForms": {"description": "Specifies whether to autogenerate forms in the code generation job.", "type": "boolean"}, "features": {"isRelationshipSupported": {"description": "Specifes whether a code generation job supports data relationships.", "type": "boolean"}, "isNonModelSupported": {"description": "Specifies whether a code generation job supports non models.", "type": "boolean"}}, "tags": {"description": "One or more key-value pairs to use when tagging the code generation job data.", "type": "map"}}}, "method_response_schema": {"entity": {"id": {"description": "The unique ID for the code generation job.", "type": "string"}, "appId": {"description": "The ID of the Amplify app associated with the code generation job.", "type": "string"}, "environmentName": {"description": "The name of the backend environment associated with the code generation job.", "type": "string"}, "renderConfig": {"react": {"module": {"description": "The JavaScript module type.", "type": "string", "enum": ["es2020", "esnext"]}, "target": {"description": "The ECMAScript specification to use.", "type": "string", "enum": ["es2015", "es2020"]}, "script": {"description": "The file type to use for a JavaScript project.", "type": "string", "enum": ["jsx", "tsx", "js"]}, "renderTypeDeclarations": {"description": "Specifies whether the code generation job should render type declaration files.", "type": "boolean"}, "inlineSourceMap": {"description": "Specifies whether the code generation job should render inline source maps.", "type": "boolean"}, "apiConfiguration": {"graphQLConfig": {"typesFilePath": {"description": "The path to the GraphQL types file, relative to the component output directory.", "type": "string"}, "queriesFilePath": {"description": "The path to the GraphQL queries file, relative to the component output directory.", "type": "string"}, "mutationsFilePath": {"description": "The path to the GraphQL mutations file, relative to the component output directory.", "type": "string"}, "subscriptionsFilePath": {"description": "The path to the GraphQL subscriptions file, relative to the component output directory.", "type": "string"}, "fragmentsFilePath": {"description": "The path to the GraphQL fragments file, relative to the component output directory.", "type": "string"}}, "dataStoreConfig": {}, "noApiConfig": {}}, "dependencies": {"description": "Lists the dependency packages that may be required for the project code to run.", "type": "map"}}}, "genericDataSchema": {"dataSourceType": {"description": "The type of the data source for the schema. Currently, the only valid value is an Amplify <code>DataStore</code>.", "type": "string", "enum": ["DataStore"]}, "models": {"fields": {"dataType": {"description": "The data type for the generic data field.", "type": "string", "enum": ["ID", "String", "Int", "Float", "AWSDate", "AWSTime", "AWSDateTime", "AWSTimestamp", "AWSEmail", "AWSURL", "AWSIPAddress", "Boolean", "AWSJSON", "AWSPhone", "Enum", "Model", "NonModel"]}, "dataTypeValue": {"description": "The value of the data type for the generic data field.", "type": "string"}, "required": {"description": "Specifies whether the generic data field is required.", "type": "boolean"}, "readOnly": {"description": "Specifies whether the generic data field is read-only.", "type": "boolean"}, "isArray": {"description": "Specifies whether the generic data field is an array.", "type": "boolean"}, "relationship": {"type": {"description": "The data relationship type.", "type": "string", "enum": ["HAS_MANY", "HAS_ONE", "BELONGS_TO"]}, "relatedModelName": {"description": "The name of the related model in the data relationship.", "type": "string"}, "relatedModelFields": {"description": "The related model fields in the data relationship.", "type": "list"}, "canUnlinkAssociatedModel": {"description": "Specifies whether the relationship can unlink the associated model.", "type": "boolean"}, "relatedJoinFieldName": {"description": "The name of the related join field in the data relationship.", "type": "string"}, "relatedJoinTableName": {"description": "The name of the related join table in the data relationship.", "type": "string"}, "belongsToFieldOnRelatedModel": {"description": "The value of the <code>belongsTo</code> field on the related data model. ", "type": "string"}, "associatedFields": {"description": "The associated fields of the data relationship.", "type": "list"}, "isHasManyIndex": {"description": "Specifies whether the <code>@index</code> directive is supported for a <code>hasMany</code> data relationship.", "type": "boolean"}}}, "isJoinTable": {"description": "Specifies whether the generic data model is a join table.", "type": "boolean"}, "primaryKeys": {"description": "The primary keys of the generic data model.", "type": "list"}}, "enums": {"values": {"description": "The list of enum values in the generic data schema.", "type": "list"}}, "nonModels": {"fields": {"dataType": {"description": "The data type for the generic data field.", "type": "string", "enum": ["ID", "String", "Int", "Float", "AWSDate", "AWSTime", "AWSDateTime", "AWSTimestamp", "AWSEmail", "AWSURL", "AWSIPAddress", "Boolean", "AWSJSON", "AWSPhone", "Enum", "Model", "NonModel"]}, "dataTypeValue": {"description": "The value of the data type for the generic data field.", "type": "string"}, "required": {"description": "Specifies whether the generic data field is required.", "type": "boolean"}, "readOnly": {"description": "Specifies whether the generic data field is read-only.", "type": "boolean"}, "isArray": {"description": "Specifies whether the generic data field is an array.", "type": "boolean"}, "relationship": {"type": {"description": "The data relationship type.", "type": "string", "enum": ["HAS_MANY", "HAS_ONE", "BELONGS_TO"]}, "relatedModelName": {"description": "The name of the related model in the data relationship.", "type": "string"}, "relatedModelFields": {"description": "The related model fields in the data relationship.", "type": "list"}, "canUnlinkAssociatedModel": {"description": "Specifies whether the relationship can unlink the associated model.", "type": "boolean"}, "relatedJoinFieldName": {"description": "The name of the related join field in the data relationship.", "type": "string"}, "relatedJoinTableName": {"description": "The name of the related join table in the data relationship.", "type": "string"}, "belongsToFieldOnRelatedModel": {"description": "The value of the <code>belongsTo</code> field on the related data model. ", "type": "string"}, "associatedFields": {"description": "The associated fields of the data relationship.", "type": "list"}, "isHasManyIndex": {"description": "Specifies whether the <code>@index</code> directive is supported for a <code>hasMany</code> data relationship.", "type": "boolean"}}}}}, "autoGenerateForms": {"description": "Specifies whether to autogenerate forms in the code generation job.", "type": "boolean"}, "features": {"isRelationshipSupported": {"description": "Specifes whether a code generation job supports data relationships.", "type": "boolean"}, "isNonModelSupported": {"description": "Specifies whether a code generation job supports non models.", "type": "boolean"}}, "status": {"description": "The status of the code generation job.", "type": "string", "enum": ["in_progress", "failed", "succeeded"]}, "statusMessage": {"description": "The customized status message for the code generation job.", "type": "string"}, "asset": {"downloadUrl": {"description": "The URL to use to access the asset.", "type": "string"}}, "tags": {"description": "One or more key-value pairs to use when tagging the code generation job.", "type": "map"}, "createdAt": {"description": "The time that the code generation job was created.", "type": "timestamp"}, "modifiedAt": {"description": "The time that the code generation job was modified.", "type": "timestamp"}, "dependencies": {"description": "Lists the dependency packages that may be required for the project code to run.", "type": "list"}}}}, {"method_name": "update_component", "method_documentation": "Updates an existing component.", "method_request_schema": {"appId": {"description": "The unique ID for the Amplify app.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is part of the Amplify app.", "type": "string"}, "id": {"description": "The unique ID for the component.", "type": "string"}, "clientToken": {"description": "The unique client token.", "type": "string"}, "updatedComponent": {"id": {"description": "The unique ID of the component to update.", "type": "string"}, "name": {"description": "The name of the component to update.", "type": "string"}, "sourceId": {"description": "The unique ID of the component in its original source system, such as Figma.", "type": "string"}, "componentType": {"description": "The type of the component. This can be an Amplify custom UI component or another custom component.", "type": "string"}, "properties": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "children": {"description": "The components that are instances of the main component.", "type": "list"}, "variants": {"description": "A list of the unique variants of the main component being updated.", "type": "list"}, "overrides": {"description": "Describes the properties that can be overriden to customize the component.", "type": "map"}, "bindingProperties": {"type": {"description": "The property type.", "type": "string"}, "bindingProperties": {"model": {"description": "An Amplify DataStore model.", "type": "string"}, "field": {"description": "The field to bind the data to.", "type": "string"}, "predicates": {"description": "A list of predicates for binding a component's properties to data.", "type": "list"}, "userAttribute": {"description": "An authenticated user attribute.", "type": "string"}, "bucket": {"description": "An Amazon S3 bucket.", "type": "string"}, "key": {"description": "The storage key for an Amazon S3 bucket.", "type": "string"}, "defaultValue": {"description": "The default value to assign to the property.", "type": "string"}, "slotName": {"description": "The name of a component slot.", "type": "string"}}, "defaultValue": {"description": "The default value of the property.", "type": "string"}}, "collectionProperties": {"model": {"description": "The name of the data model to use to bind data to a component.", "type": "string"}, "sort": {"description": "Describes how to sort the component's properties.", "type": "list"}, "predicate": {"or": {"description": "A list of predicates to combine logically.", "type": "list"}, "and": {"description": "A list of predicates to combine logically.", "type": "list"}, "field": {"description": "The field to query.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation.", "type": "string"}, "operand": {"description": "The value to use when performing the evaluation.", "type": "string"}, "operandType": {"description": "The type of value to use when performing the evaluation.", "type": "string"}}, "identifiers": {"description": "A list of IDs to use to bind data to a component. Use this property to bind specifically chosen data, rather than data retrieved from a query.", "type": "list"}}, "events": {"action": {"description": "The action to perform when a specific event is raised.", "type": "string"}, "parameters": {"type": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "url": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "anchor": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "target": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "global": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "model": {"description": "The name of the data model. Use when the action performs an operation on an Amplify DataStore model.", "type": "string"}, "id": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "fields": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "state": {"componentName": {"description": "The name of the component that is being modified.", "type": "string"}, "property": {"description": "The name of the component property to apply the state configuration to.", "type": "string"}, "set": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}}}, "bindingEvent": {"description": "Binds an event to an action on a component. When you specify a <code>bindingEvent</code>, the event is called when the action is performed.", "type": "string"}}, "schemaVersion": {"description": "The schema version of the component when it was imported.", "type": "string"}}}, "method_response_schema": {"entity": {"appId": {"description": "The unique ID of the Amplify app associated with the component.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "sourceId": {"description": "The unique ID of the component in its original source system, such as Figma.", "type": "string"}, "id": {"description": "The unique ID of the component.", "type": "string"}, "name": {"description": "The name of the component.", "type": "string"}, "componentType": {"description": "The type of the component. This can be an Amplify custom UI component or another custom component.", "type": "string"}, "properties": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "children": {"description": "A list of the component's <code>ComponentChild</code> instances.", "type": "list"}, "variants": {"description": "A list of the component's variants. A variant is a unique style configuration of a main component.", "type": "list"}, "overrides": {"description": "Describes the component's properties that can be overriden in a customized instance of the component. You can't specify <code>tags</code> as a valid property for <code>overrides</code>.", "type": "map"}, "bindingProperties": {"type": {"description": "The property type.", "type": "string"}, "bindingProperties": {"model": {"description": "An Amplify DataStore model.", "type": "string"}, "field": {"description": "The field to bind the data to.", "type": "string"}, "predicates": {"description": "A list of predicates for binding a component's properties to data.", "type": "list"}, "userAttribute": {"description": "An authenticated user attribute.", "type": "string"}, "bucket": {"description": "An Amazon S3 bucket.", "type": "string"}, "key": {"description": "The storage key for an Amazon S3 bucket.", "type": "string"}, "defaultValue": {"description": "The default value to assign to the property.", "type": "string"}, "slotName": {"description": "The name of a component slot.", "type": "string"}}, "defaultValue": {"description": "The default value of the property.", "type": "string"}}, "collectionProperties": {"model": {"description": "The name of the data model to use to bind data to a component.", "type": "string"}, "sort": {"description": "Describes how to sort the component's properties.", "type": "list"}, "predicate": {"or": {"description": "A list of predicates to combine logically.", "type": "list"}, "and": {"description": "A list of predicates to combine logically.", "type": "list"}, "field": {"description": "The field to query.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation.", "type": "string"}, "operand": {"description": "The value to use when performing the evaluation.", "type": "string"}, "operandType": {"description": "The type of value to use when performing the evaluation.", "type": "string"}}, "identifiers": {"description": "A list of IDs to use to bind data to a component. Use this property to bind specifically chosen data, rather than data retrieved from a query.", "type": "list"}}, "createdAt": {"description": "The time that the component was created.", "type": "timestamp"}, "modifiedAt": {"description": "The time that the component was modified.", "type": "timestamp"}, "tags": {"description": "One or more key-value pairs to use when tagging the component.", "type": "map"}, "events": {"action": {"description": "The action to perform when a specific event is raised.", "type": "string"}, "parameters": {"type": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "url": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "anchor": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "target": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "global": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "model": {"description": "The name of the data model. Use when the action performs an operation on an Amplify DataStore model.", "type": "string"}, "id": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "fields": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}, "state": {"componentName": {"description": "The name of the component that is being modified.", "type": "string"}, "property": {"description": "The name of the component property to apply the state configuration to.", "type": "string"}, "set": {"value": {"description": "The value to assign to the component property.", "type": "string"}, "bindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "collectionBindingProperties": {"property": {"description": "The component property to bind to the data field.", "type": "string"}, "field": {"description": "The data field to bind the property to.", "type": "string"}}, "defaultValue": {"description": "The default value to assign to the component property.", "type": "string"}, "model": {"description": "The data model to use to assign a value to the component property.", "type": "string"}, "bindings": {"element": {"description": "The name of the component to retrieve a value from.", "type": "string"}, "property": {"description": "The property to retrieve a value from.", "type": "string"}}, "event": {"description": "An event that occurs in your app. Use this for workflow data binding.", "type": "string"}, "userAttribute": {"description": "An authenticated user attribute to use to assign a value to the component property.", "type": "string"}, "concat": {"description": "A list of component properties to concatenate to create the value to assign to this component property.", "type": "list"}, "condition": {"property": {"description": "The name of the conditional property.", "type": "string"}, "field": {"description": "The name of a field. Specify this when the property is a data model.", "type": "string"}, "operator": {"description": "The operator to use to perform the evaluation, such as <code>eq</code> to represent equals.", "type": "string"}, "operand": {"description": "The value of the property to evaluate.", "type": "string"}, "then": "{...recursive...}", "else": "{...recursive...}", "operandType": {"description": "The type of the property to evaluate.", "type": "string"}}, "configured": {"description": "Specifies whether the user configured the property in Amplify Studio after importing it.", "type": "boolean"}, "type": {"description": "The component type.", "type": "string"}, "importedValue": {"description": "The default value assigned to the property when the component is imported into an app.", "type": "string"}, "componentName": {"description": "The name of the component that is affected by an event.", "type": "string"}, "property": {"description": "The name of the component's property that is affected by an event.", "type": "string"}}}}, "bindingEvent": {"description": "Binds an event to an action on a component. When you specify a <code>bindingEvent</code>, the event is called when the action is performed.", "type": "string"}}, "schemaVersion": {"description": "The schema version of the component when it was imported.", "type": "string"}}}}, {"method_name": "update_form", "method_documentation": "Updates an existing form.", "method_request_schema": {"appId": {"description": "The unique ID for the Amplify app.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is part of the Amplify app.", "type": "string"}, "id": {"description": "The unique ID for the form.", "type": "string"}, "clientToken": {"description": "The unique client token.", "type": "string"}, "updatedForm": {"name": {"description": "The name of the form.", "type": "string"}, "dataType": {"dataSourceType": {"description": "The data source type, either an Amplify DataStore model or a custom data type.", "type": "string", "enum": ["DataStore", "Custom"]}, "dataTypeName": {"description": "The unique name of the data type you are using as the data source for the form.", "type": "string"}}, "formActionType": {"description": "Specifies whether to perform a create or update action on the form.", "type": "string", "enum": ["create", "update"]}, "fields": {"label": {"description": "The label for the field.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}, "excluded": {"description": "Specifies whether to hide a field.", "type": "boolean"}, "inputType": {"type": {"description": "The input type for the field. ", "type": "string"}, "required": {"description": "Specifies a field that requires input.", "type": "boolean"}, "readOnly": {"description": "Specifies a read only field.", "type": "boolean"}, "placeholder": {"description": "The text to display as a placeholder for the field.", "type": "string"}, "defaultValue": {"description": "The default value for the field.", "type": "string"}, "descriptiveText": {"description": "The text to display to describe the field.", "type": "string"}, "defaultChecked": {"description": "Specifies whether a field has a default value.", "type": "boolean"}, "defaultCountryCode": {"description": "The default country code for a phone number.", "type": "string"}, "valueMappings": {"values": {"description": "The value and display value pairs.", "type": "list"}, "bindingProperties": {"type": {"description": "The property type.", "type": "string"}, "bindingProperties": {"model": {"description": "An Amplify DataStore model.", "type": "string"}}}}, "name": {"description": "The name of the field.", "type": "string"}, "minValue": {"description": "The minimum value to display for the field.", "type": "float"}, "maxValue": {"description": "The maximum value to display for the field.", "type": "float"}, "step": {"description": "The stepping increment for a numeric value in a field.", "type": "float"}, "value": {"description": "The value for the field.", "type": "string"}, "isArray": {"description": "Specifies whether to render the field as an array. This property is ignored if the <code>dataSourceType</code> for the form is a Data Store.", "type": "boolean"}, "fileUploaderConfig": {"accessLevel": {"description": "The access level to assign to the uploaded files in the Amazon S3 bucket where they are stored. The valid values for this property are <code>private</code>, <code>protected</code>, or <code>public</code>. For detailed information about the permissions associated with each access level, see <a href=\"https://docs.amplify.aws/lib/storage/configureaccess/q/platform/js/\">File access levels</a> in the <i>Amplify documentation</i>.", "type": "string", "enum": ["public", "protected", "private"]}, "acceptedFileTypes": {"description": "The file types that are allowed to be uploaded by the file uploader. Provide this information in an array of strings specifying the valid file extensions.", "type": "list"}, "showThumbnails": {"description": "Specifies whether to display or hide the image preview after selecting a file for upload. The default value is <code>true</code> to display the image preview.", "type": "boolean"}, "isResumable": {"description": "Allows the file upload operation to be paused and resumed. The default value is <code>false</code>. When <code>isResumable</code> is set to <code>true</code>, the file uploader uses a multipart upload to break the files into chunks before upload. The progress of the upload isn't continuous, because the file uploader uploads a chunk at a time.", "type": "boolean"}, "maxFileCount": {"description": "Specifies the maximum number of files that can be selected to upload. The default value is an unlimited number of files.", "type": "integer"}, "maxSize": {"description": "The maximum file size in bytes that the file uploader will accept. The default value is an unlimited file size.", "type": "integer"}}}, "validations": {"description": "The validations to perform on the value in the field.", "type": "list"}}, "style": {"horizontalGap": {"tokenReference": {"description": "A reference to a design token to use to bind the form's style properties to an existing theme.", "type": "string"}, "value": {"description": "The value of the style setting.", "type": "string"}}, "verticalGap": {"tokenReference": {"description": "A reference to a design token to use to bind the form's style properties to an existing theme.", "type": "string"}, "value": {"description": "The value of the style setting.", "type": "string"}}, "outerPadding": {"tokenReference": {"description": "A reference to a design token to use to bind the form's style properties to an existing theme.", "type": "string"}, "value": {"description": "The value of the style setting.", "type": "string"}}}, "sectionalElements": {"type": {"description": "The type of sectional element. Valid values are <code>Heading</code>, <code>Text</code>, and <code>Divider</code>.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}, "text": {"description": "The text for a <code>Text</code> sectional element.", "type": "string"}, "level": {"description": "Specifies the size of the font for a <code>Heading</code> sectional element. Valid values are <code>1 | 2 | 3 | 4 | 5 | 6</code>.", "type": "integer"}, "orientation": {"description": "Specifies the orientation for a <code>Divider</code> sectional element. Valid values are <code>horizontal</code> or <code>vertical</code>.", "type": "string"}, "excluded": {"description": "Excludes a sectional element that was generated by default for a specified data model.", "type": "boolean"}}, "schemaVersion": {"description": "The schema version of the form.", "type": "string"}, "cta": {"position": {"description": "The position of the button.", "type": "string", "enum": ["top", "bottom", "top_and_bottom"]}, "clear": {"excluded": {"description": "Specifies whether the button is visible on the form.", "type": "boolean"}, "children": {"description": "Describes the button's properties.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}}, "cancel": {"excluded": {"description": "Specifies whether the button is visible on the form.", "type": "boolean"}, "children": {"description": "Describes the button's properties.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}}, "submit": {"excluded": {"description": "Specifies whether the button is visible on the form.", "type": "boolean"}, "children": {"description": "Describes the button's properties.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}}}, "labelDecorator": {"description": "Specifies an icon or decoration to display on the form.", "type": "string", "enum": ["required", "optional", "none"]}}}, "method_response_schema": {"entity": {"appId": {"description": "The unique ID of the Amplify app associated with the form.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "id": {"description": "The unique ID of the form.", "type": "string"}, "name": {"description": "The name of the form.", "type": "string"}, "formActionType": {"description": "The operation to perform on the specified form.", "type": "string", "enum": ["create", "update"]}, "style": {"horizontalGap": {"tokenReference": {"description": "A reference to a design token to use to bind the form's style properties to an existing theme.", "type": "string"}, "value": {"description": "The value of the style setting.", "type": "string"}}, "verticalGap": {"tokenReference": {"description": "A reference to a design token to use to bind the form's style properties to an existing theme.", "type": "string"}, "value": {"description": "The value of the style setting.", "type": "string"}}, "outerPadding": {"tokenReference": {"description": "A reference to a design token to use to bind the form's style properties to an existing theme.", "type": "string"}, "value": {"description": "The value of the style setting.", "type": "string"}}}, "dataType": {"dataSourceType": {"description": "The data source type, either an Amplify DataStore model or a custom data type.", "type": "string", "enum": ["DataStore", "Custom"]}, "dataTypeName": {"description": "The unique name of the data type you are using as the data source for the form.", "type": "string"}}, "fields": {"label": {"description": "The label for the field.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}, "excluded": {"description": "Specifies whether to hide a field.", "type": "boolean"}, "inputType": {"type": {"description": "The input type for the field. ", "type": "string"}, "required": {"description": "Specifies a field that requires input.", "type": "boolean"}, "readOnly": {"description": "Specifies a read only field.", "type": "boolean"}, "placeholder": {"description": "The text to display as a placeholder for the field.", "type": "string"}, "defaultValue": {"description": "The default value for the field.", "type": "string"}, "descriptiveText": {"description": "The text to display to describe the field.", "type": "string"}, "defaultChecked": {"description": "Specifies whether a field has a default value.", "type": "boolean"}, "defaultCountryCode": {"description": "The default country code for a phone number.", "type": "string"}, "valueMappings": {"values": {"description": "The value and display value pairs.", "type": "list"}, "bindingProperties": {"type": {"description": "The property type.", "type": "string"}, "bindingProperties": {"model": {"description": "An Amplify DataStore model.", "type": "string"}}}}, "name": {"description": "The name of the field.", "type": "string"}, "minValue": {"description": "The minimum value to display for the field.", "type": "float"}, "maxValue": {"description": "The maximum value to display for the field.", "type": "float"}, "step": {"description": "The stepping increment for a numeric value in a field.", "type": "float"}, "value": {"description": "The value for the field.", "type": "string"}, "isArray": {"description": "Specifies whether to render the field as an array. This property is ignored if the <code>dataSourceType</code> for the form is a Data Store.", "type": "boolean"}, "fileUploaderConfig": {"accessLevel": {"description": "The access level to assign to the uploaded files in the Amazon S3 bucket where they are stored. The valid values for this property are <code>private</code>, <code>protected</code>, or <code>public</code>. For detailed information about the permissions associated with each access level, see <a href=\"https://docs.amplify.aws/lib/storage/configureaccess/q/platform/js/\">File access levels</a> in the <i>Amplify documentation</i>.", "type": "string", "enum": ["public", "protected", "private"]}, "acceptedFileTypes": {"description": "The file types that are allowed to be uploaded by the file uploader. Provide this information in an array of strings specifying the valid file extensions.", "type": "list"}, "showThumbnails": {"description": "Specifies whether to display or hide the image preview after selecting a file for upload. The default value is <code>true</code> to display the image preview.", "type": "boolean"}, "isResumable": {"description": "Allows the file upload operation to be paused and resumed. The default value is <code>false</code>. When <code>isResumable</code> is set to <code>true</code>, the file uploader uses a multipart upload to break the files into chunks before upload. The progress of the upload isn't continuous, because the file uploader uploads a chunk at a time.", "type": "boolean"}, "maxFileCount": {"description": "Specifies the maximum number of files that can be selected to upload. The default value is an unlimited number of files.", "type": "integer"}, "maxSize": {"description": "The maximum file size in bytes that the file uploader will accept. The default value is an unlimited file size.", "type": "integer"}}}, "validations": {"description": "The validations to perform on the value in the field.", "type": "list"}}, "sectionalElements": {"type": {"description": "The type of sectional element. Valid values are <code>Heading</code>, <code>Text</code>, and <code>Divider</code>.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}, "text": {"description": "The text for a <code>Text</code> sectional element.", "type": "string"}, "level": {"description": "Specifies the size of the font for a <code>Heading</code> sectional element. Valid values are <code>1 | 2 | 3 | 4 | 5 | 6</code>.", "type": "integer"}, "orientation": {"description": "Specifies the orientation for a <code>Divider</code> sectional element. Valid values are <code>horizontal</code> or <code>vertical</code>.", "type": "string"}, "excluded": {"description": "Excludes a sectional element that was generated by default for a specified data model.", "type": "boolean"}}, "schemaVersion": {"description": "The schema version of the form when it was imported.", "type": "string"}, "tags": {"description": "One or more key-value pairs to use when tagging the form.", "type": "map"}, "cta": {"position": {"description": "The position of the button.", "type": "string", "enum": ["top", "bottom", "top_and_bottom"]}, "clear": {"excluded": {"description": "Specifies whether the button is visible on the form.", "type": "boolean"}, "children": {"description": "Describes the button's properties.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}}, "cancel": {"excluded": {"description": "Specifies whether the button is visible on the form.", "type": "boolean"}, "children": {"description": "Describes the button's properties.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}}, "submit": {"excluded": {"description": "Specifies whether the button is visible on the form.", "type": "boolean"}, "children": {"description": "Describes the button's properties.", "type": "string"}, "position": {"fixed": {"description": "The field position is fixed and doesn't change in relation to other fields.", "type": "string", "enum": ["first"]}, "rightOf": {"description": "The field position is to the right of the field specified by the string.", "type": "string"}, "below": {"description": "The field position is below the field specified by the string.", "type": "string"}}}}, "labelDecorator": {"description": "Specifies an icon or decoration to display on the form.", "type": "string", "enum": ["required", "optional", "none"]}}}}, {"method_name": "update_theme", "method_documentation": "Updates an existing theme.", "method_request_schema": {"appId": {"description": "The unique ID for the Amplify app.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is part of the Amplify app.", "type": "string"}, "id": {"description": "The unique ID for the theme.", "type": "string"}, "clientToken": {"description": "The unique client token.", "type": "string"}, "updatedTheme": {"id": {"description": "The unique ID of the theme to update.", "type": "string"}, "name": {"description": "The name of the theme to update.", "type": "string"}, "values": {"description": "A list of key-value pairs that define the theme's properties.", "type": "list"}, "overrides": {"description": "Describes the properties that can be overriden to customize the theme.", "type": "list"}}}, "method_response_schema": {"entity": {"appId": {"description": "The unique ID for the Amplify app associated with the theme.", "type": "string"}, "environmentName": {"description": "The name of the backend environment that is a part of the Amplify app.", "type": "string"}, "id": {"description": "The ID for the theme.", "type": "string"}, "name": {"description": "The name of the theme.", "type": "string"}, "createdAt": {"description": "The time that the theme was created.", "type": "timestamp"}, "modifiedAt": {"description": "The time that the theme was modified.", "type": "timestamp"}, "values": {"description": "A list of key-value pairs that defines the properties of the theme.", "type": "list"}, "overrides": {"description": "Describes the properties that can be overriden to customize a theme.", "type": "list"}, "tags": {"description": "One or more key-value pairs to use when tagging the theme.", "type": "map"}}}}]}}